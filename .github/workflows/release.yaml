name: Deploy
on:
  release:
    types: [published]
jobs:
  start-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      packages: ${{ steps.version-mono.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: version-mono
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@github.com"
          git rev-list --tags --skip=1 --max-count=1
          echo more stuff
          git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`
          echo on we go
          PREV_TAG_HASH=$(git rev-list --tags --skip=1 --max-count=1)
          PREV_TAG=$(git describe --abbrev=0 --tags $PREV_TAG_HASH)
          echo "prev tag hash is $PREV_TAG_HASH"
          echo "prev tag is $PREV_TAG"
          echo "curr hash is $GITHUB_SHA"
          echo "curr ref is $GITHUB_REF_NAME"
          echo git diff --name-only "$GITHUB_REF_NAME" "$PREV_TAG"
          git diff --name-only "$GITHUB_REF_NAME" "$PREV_TAG"
          MODIFIED_PACKAGES=$(git diff --name-only "$GITHUB_REF_NAME" "$PREV_TAG" | grep "^packages\/*" | cut -d / -f2 | sort | uniq)
          echo "packages are $MODIFIED_PACKAGES"
          echo "packages=$MODIFIED_PACKAGES"
          echo "packages=$MODIFIED_PACKAGES" >> "$GITHUB_OUTPUT"
          echo "TODO BRANCH AND VERSION MONO REPO"
  build-package-a:
    needs: [start-release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build Package A
        env:
          ALL_PACKAGES: ${{ needs.start-release.outputs.packages}}
          PACKAGE_NAME: a
        run: |
          echo "PACKAGES ARE \""$ALL_PACKAGES"\""
          PACKAGES=($ALL_PACKAGES)
          FOUND=0
          for i in $PACKAGES; do
              if [ "$i" == "$PACKAGE_NAME" ]; then 
                  FOUND=1
              fi
          done

          if ! [[ $FOUND == 1 ]]; then
              echo "$PACKAGE_NAME unchanged - will not build"
              exit
          fi
          
          echo "BUILD IT"